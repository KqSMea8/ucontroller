(function(){
Template.__checkName("about_arduino");
Template["about_arduino"] = new Template("Template.about_arduino", (function() {
  var view = this;
  return HTML.DIV({
    "class": "col-md-12"
  }, HTML.Raw("\n		<h1>Using Arduino</h1>\n		"), HTML.DIV({
    "class": "well"
  }, "\n			", HTML.Raw("<p>To get your sensors up and running, you'll have to learn how to upload the Arduino embedded software [called <strong>sketches</strong>] to the microcontroller. The team behind Arduino has already created a so-called IDE [Integrated Development Editor] that is really simple to use for sketch development and board uploads. </p>"), "\n			", HTML.Raw("<p>But the easiest option is probably to use the Codebender browser plugin.</p>"), "\n\n			", HTML.Raw("<h2>Codebender Browser Plugin</h2>"), "\n\n			", HTML.Raw('<p>All examples presented here on MySensors can be downloaded directly to your attached Arduino without any extra software using the excellent <a href="https://codebender.cc">codebender browser plugin</a>. The code compiles on cloud server with all libraries installed and ready to use. Here is a simple LED-blink example to show how it could look on MySensors:</p>'), "\n\n			", Blaze._TemplateWith(function() {
    return {
      sketch: Spacebars.call("example/01.Basics/Blink")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("codebender"));
  }), "\n\n\n			", HTML.Raw('<p>Some browsers might need <a target="_blank" href="https://codebender.cc/static/plugin">some extra care</a> to get the plugin working.</p>'), "\n			", HTML.Raw('<p>But normally you just have to select Arduino Model and USB port in the drop down menu. Then press the "Run on Arduino" button.</p>'), "\n\n\n			", HTML.Raw("<h2>Installing the development environment on your computer</h2>"), "\n\n			", HTML.Raw('<!-- a href="/started/ide.png" data-lightbox="image-ide" title="The Arduino IDE"><img src="/started/ide.png" class="pull-right col-md-4 col-sm-4 col-xs-4 "></a -->'), "\n\n\n			", HTML.Raw("<p>Of course you can also run and compile everything locally on your computer. The team behind Arduino have also written a pretty good guide on how to install the IDE so just follow the instructions for your platform [and don't forget to come back here after].</p>"), "\n\n\n\n\n			 ", HTML.Raw('<p><a class="btn btn-md btn-primary" href="http://arduino.cc/en/Guide/Windows" target="_new"><i class="fa fa-chevron-right"></i> Windows <i class="fa fa-chevron-left"></i></a>\n			 </p>'), "\n\n			 ", HTML.Raw('<p><a class="btn btn-md btn-primary" href="http://arduino.cc/en/Guide/MacOSX" target="_new"><i class="fa fa-chevron-right"></i> Mac OS <i class="fa fa-chevron-left"></i></a>\n			 </p>'), "\n\n			", HTML.Raw("<p>Here is a small clip [for the youtube-generation] showing how to get started with the Arduino environment.\n			</p>"), "\n			", HTML.Raw('<iframe class="youtube" src="https://www.youtube.com/embed/qUey_X9n2KI" frameborder="0" allowfullscreen=""></iframe>'), "\n\n\n			", HTML.Raw("<h2>Installing the sensor libraries</h2>"), "\n			 ", HTML.Raw('<a href="/started/zipContent.png" data-lightbox="image-finding" title="The content of the downloaded library zip."><img src="/started/zipContent.png" class="pull-right col-md-4 col-sm-4 col-xs-4 "></a>'), "\n			", HTML.Raw("<p>We have collected a bunch of open source libraries that will enable your Arduino to talk to different types of sensors. This package also includes the library that MySensors developed for handling communication between the sensors and the gateway. </p>"), "\n			", HTML.Raw("<p><strong>Note! These libraries must be installed before you can run any of the example sketches that MySensors provides.</strong></p>"), "\n			", HTML.Raw('<p>Start the install process by downloading the github zip with the latest library collection [we will also notify you in the <a href="/">news section</a> when it\'s time to upgrade the library package]. </p>'), "\n\n			 ", HTML.Raw('<a href="/started/findingLibraries.png" data-lightbox="image-finding" title="Arduino IDE Perferences"><img src="/started/findingLibraries.png" class="pull-right col-md-4 col-sm-4 col-xs-4 "></a>'), "\n\n			 ", HTML.Raw('<p><a class="btn btn-md btn-primary" href="https://github.com/mysensors/Arduino/archive/master.zip"> <i class="fa fa-download"></i> Download Libraries</a>\n			 </p>'), "\n\n			 ", HTML.Raw('<p>To find the the location where you should put the bundled libraries, start up the Arduino IDE and open Preferences under the "File" menu on Windows or "Arduino" menu on Mac OS X.</p>'), "\n\n			 ", HTML.Raw('<p>Note the <strong>"Sketchbook location"</strong> on your computer drive. </p>'), "\n\n			 ", HTML.Raw("<p><strong>Now extract the content of the library zip archive to the sketchbook location on your hard drive.</strong>. You can drop everything you find in the zip (including libraries folder) to your sketchbook location.</p>"), "\n\n\n\n			", HTML.Raw("<h2>Connecting the Arduino to your computer</h2>"), "\n			 ", HTML.Raw('<a href="/started/port.png" data-lightbox="image-finding" title="Arduino IDE Perferences"><img src="/started/port.png" class="pull-right col-md-4 col-sm-4 col-xs-4 "></a>'), "\n			", HTML.Raw('<p>Both the Arduino Uno and Nano have built in USB connectors. If everything is setup correctly you should be able simply connect them to your computer using a standard USB cable and select the serial connection under the Tools <i class="fa fa-arrow-right"></i> Port menu in the Arduino IDE. </p>'), "\n\n			", HTML.Raw("<p>The Arduino Pro Mini does not include a built-in USB circuit, so an off-board USB-to-TTL serial converter must be used to upload the software sketches to your Arduino.</p>"), "\n\n			", HTML.Raw('<a href="/started/ftdi.png" data-lightbox="image-finding" title="FTDI Adapter"><img src="/started/ftdi.png" class="pull-right col-md-4 col-sm-4 col-xs-4 "></a>'), "\n\n			", HTML.Raw("<p>The FTDI adapter we've added to the <a href=\"/store#arduinos\">store</a> is configurable for both 5V and 3.3V output mode. It's important to select the correct voltage when connecting a 3.3V Arduino Pro Mini.</p>"), "\n\n\n\n\n			", HTML.Raw("<h2>Uploading example sketches</h2>"), "\n			", HTML.Raw("<p>You'll find download links [<i class=\"fa fa-download\"></i>] directly on each of the example sensor build pages. We've also bundled the examples with the library zip you previously downloaded so you can find the sketches in:</p>"), "\n\n			", HTML.Raw("<p><ul><strong><i>&lt;your sketchbook location&gt;/libraries/MySensors/examples/</i></strong></ul></p>"), "\n\n			", HTML.Raw('<a href="/started/upload.png" data-lightbox="image-finding" title="Compile and upload sketch"><img src="/started/upload.png" class="pull-right col-md-4 col-sm-4 col-xs-4 "></a>'), "\n\n			", HTML.Raw("<p>Press the compile button to generate a binary executable for the Arduino. If you press upload button the binary sketch will be sent to your Arduino through the connected USB-cable. The Arduino will automatically restart itself after the binary sketch upload completes.</p>"), "\n\n			", HTML.Raw("<p>If any errors occur they will be displayed in the console at the bottom of the screen. </p>"), "\n\n			", HTML.Raw("<h2>Basic structure of sketches</h2>"), "\n			", HTML.Raw("<p>Arduino sketches must contain two main functions - <i>setup()</i> and <i>loop()</i>. <i>Setup()</i> will be called whenever the Arduino is powered cycled or reset. <i>Loop()</i> will be called continuously. </p>"), "\n			", HTML.Raw('<p>A general rule is to place all initialization logic in the <i>setup()</i> function and the normal "work" in the <i>loop()</i> function.</p>'), "\n\n			", HTML.Raw('<pre><code class="cpp">// Include your libraries at the top\n#include &lt;SPI.h>\n\nvoid setup()\n{\n	// The first thing that is called in sketch.\n}\n\n\nvoid loop()\n{\n	// This will be called contentiously after setup.\n}</code></pre>'), "\n\n			", HTML.Raw("<h2>A few general tips</h2>"), "\n			", HTML.Raw('<ul>\n				<li> Use the serial monitor to see what is going on in the sensor. We\'re outputting debug information that can help you find potential problems. You can enable it under <strong>Tools>Serial Monitor</strong>.</li>\n				<li> Remember to set the correct board type before uploading your sketch. You\'ll find the list under the <strong>Tools <i class="fa fa-arrow-right"> </i>Board</strong> menu item. We\'re usually using one of the following 3 types in our examples:\n				<ul>\n					<li> Arduino Uno</li>\n					<li> Arduino Nano</li>\n					<li> Arduino Pro or Pro Mini </li>\n				</ul>\n				</li>\n				<li> If sketch upload fails, check that the correct serial port is selected under the <strong>Tools <i class="fa fa-arrow-right"></i> Serial Port</strong> menu item.</li>\n				<li> When using a Pro Mini, you must upload the sketch binaries using an FTDI serial adapter. <strong>Double check that you have selected the correct output power using the jumper on the adapter!</strong> If you accidently feed 5V to a 3.3V Arduino board it will probably break.</li>\n			</ul>'), "\n\n\n			 ", HTML.Raw('<p><a class="btn btn-lg btn-primary" href="/store#guide"><span class="glyphicon glyphicon-chevron-right"></span> Ok, got it! Let\'s start building!</a></p>'), "\n		"), "\n	");
}));

}).call(this);
